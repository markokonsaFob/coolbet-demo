buildscript {
    repositories {
        mavenCentral()
        maven {
            url "http://fobsolutions.bintray.com/io.cify"
        }
    }
    dependencies {
        classpath('io.cify:cify-runner:1.3.2')
        classpath('net.masterthought:cucumber-reporting:2.8.0')
    }
}

group 'io.cify'
version '0.0.1'

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: 'groovy'
apply plugin: 'cify-runner'
apply plugin: 'java'

repositories {
    mavenCentral()
    maven {
        url "http://fobsolutions.bintray.com/io.cify"
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'net.masterthought:cucumber-reporting:2.8.0'
    compile files('libs/sikulixsetup-1.1.0.jar')
    compile group: 'org.json', name: 'json', version: '20160212'
    compile group: 'io.cify', name: 'cify-framework', version: '1.3.9'
    compile 'io.cify:cify-cucumber-plugins:1.1.0'

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'info.cukes', name: 'cucumber-groovy', version: '1.2.4'
}

import io.cify.runner.tasks.CifyCucumberTask
import net.masterthought.cucumber.Configuration
import net.masterthought.cucumber.ReportBuilder

tasks.withType(CifyCucumberTask) {
    maxHeapSize = '8000m'
}
// Generate reports from JSON results
tasks.cucumber.doLast() {
    File reportOutputDirectory = new File("build/cify/reports")
    List<String> jsonFiles = new ArrayList<>()
    def reports = project.fileTree(dir: 'build/cify/reports/json').include '*.json'
    reports.each { File file ->
        jsonFiles.add(file.getPath())
    }
    String projectName = "CoolBet"

    Configuration configuration = new Configuration(reportOutputDirectory, projectName)
    ReportBuilder reportBuilder = new ReportBuilder(jsonFiles, configuration)
    reportBuilder.generateReports()
}